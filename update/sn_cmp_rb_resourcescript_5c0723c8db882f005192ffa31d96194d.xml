<?xml version="1.0" encoding="UTF-8"?><record_update table="sn_cmp_rb_resourcescript">
    <sn_cmp_rb_resourcescript action="INSERT_OR_UPDATE">
        <name>Extension GetVM Processor</name>
        <resource display_value="vSphere Datacenter">5cc941360b632200e937c97193673a1a</resource>
        <script>function processResponse(response, cloudServiceAccountId){&#13;
	var cloudModelString = [];&#13;
	var vmResponse = {};&#13;
	if(typeof response =='string')&#13;
		vmResponse=global.JSON.parse(response);&#13;
	else&#13;
		vmResponse=response;&#13;
		&#13;
		var vmInfo ={&#13;
			"cmdb_ci_vmware_instance": {&#13;
				"identification": {&#13;
					"cmdb_ci_cloud_service_account": {&#13;
						"criterion": {&#13;
							"object_id": cloudServiceAccountId&#13;
						}&#13;
					},&#13;
					"cmdb_ci_vcenter_datacenter": {&#13;
						"criterion": {&#13;
							"object_id": getLDC()&#13;
						}&#13;
					},&#13;
					"cmdb_ci_vmware_instance": {&#13;
						"criterion": {&#13;
							"object_id": vmResponse.objectId&#13;
						}&#13;
					}&#13;
				},&#13;
				"attributes": {&#13;
					"object_id": vmResponse.objectId,&#13;
					"state": translateState(vmResponse.value.power_state),&#13;
					"memory": vmResponse.value.memory.size_MiB,&#13;
					"cpus": vmResponse.value.cpu.count,&#13;
					"disks": vmResponse.value.disks.length&#13;
				}&#13;
			}&#13;
		};&#13;
		cloudModelString.push(vmInfo);&#13;
	&#13;
	return global.JSON.stringify(cloudModelString);&#13;
}&#13;
&#13;
function translateState(state){&#13;
	switch(state){&#13;
		case "SUSPENDED":&#13;
			return "";&#13;
		case "POWERED_OFF":&#13;
			return "off";&#13;
		default:&#13;
			return "on";&#13;
	}&#13;
}&#13;
&#13;
function getLDC(){&#13;
	var stepResponse = global.JSON.parse(step);&#13;
	return stepResponse.ldcObjectId;&#13;
}</script>
        <script_js><![CDATA[function processResponse(response, cloudServiceAccountId){
	var cloudModelString = [];
	var vmResponse = {};
	if(typeof response =='string')
		vmResponse=global.JSON.parse(response);
	else
		vmResponse=response;
		
		var vmInfo ={
			"cmdb_ci_vmware_instance": {
				"identification": {
					"cmdb_ci_cloud_service_account": {
						"criterion": {
							"object_id": cloudServiceAccountId
						}
					},
					"cmdb_ci_vcenter_datacenter": {
						"criterion": {
							"object_id": getLDC()
						}
					},
					"cmdb_ci_vmware_instance": {
						"criterion": {
							"object_id": vmResponse.objectId
						}
					}
				},
				"attributes": {
					"object_id": vmResponse.objectId,
					"state": translateState(vmResponse.value.power_state),
					"memory": vmResponse.value.memory.size_MiB,
					"cpus": vmResponse.value.cpu.count,
					"disks": vmResponse.value.disks.length
				}
			}
		};
		cloudModelString.push(vmInfo);
	
	return global.JSON.stringify(cloudModelString);
}

function translateState(state){
	switch(state){
		case "SUSPENDED":
			return "";
		case "POWERED_OFF":
			return "off";
		default:
			return "on";
	}
}

function getLDC(){
	var stepResponse = global.JSON.parse(step);
	return stepResponse.ldcObjectId;
}]]></script_js>
        <sys_class_name>sn_cmp_rb_resourcescript</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-08-16 11:25:54</sys_created_on>
        <sys_id>5c0723c8db882f005192ffa31d96194d</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Extension GetVM Processor</sys_name>
        <sys_package display_value="CMP VMware Day2 Operations" source="x_snc_cmp_vm_d2ops">c29267c0db882f005192ffa31d9619df</sys_package>
        <sys_policy/>
        <sys_scope display_value="CMP VMware Day2 Operations">c29267c0db882f005192ffa31d9619df</sys_scope>
        <sys_update_name>sn_cmp_rb_resourcescript_5c0723c8db882f005192ffa31d96194d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-09-06 15:01:49</sys_updated_on>
        <type>7</type>
    </sn_cmp_rb_resourcescript>
</record_update>
